Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]

CODE:

        n = len(nums)
        k = k%n

        start = 0
        end1 = n-k-1
        while(start<end1):
            nums[start],nums[end1] = nums[end1],nums[start]
            start += 1
            end1 -= 1
        start2 = n-k
        end2 = n-1
        while(start2<end2):
            nums[start2],nums[end2] = nums[end2],nums[start2]
            start2 += 1
            end2 -= 1

        start3 = 0
        end3 = n-1

        while(start3<end3):
            nums[start3],nums[end3] = nums[end3],nums[start3]
            start3 += 1
            end3 -= 1
